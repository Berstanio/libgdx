<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.badlogicgames.gdx</groupId>
        <artifactId>gdx-parent</artifactId>
        <version>1.10.1-SNAPSHOT</version>
        <relativePath>../../..</relativePath>
    </parent>
    
    <artifactId>gdx-platform</artifactId>
    <packaging>jar</packaging>
    <name>libGDX Native Libraries</name>
    
    <properties>
        <base.url>https://libgdx-nightlies.s3.eu-central-1.amazonaws.com/libgdx-natives</base.url>
    </properties>
    
    <dependencies>
    </dependencies>
    
    <build>
        <sourceDirectory>src</sourceDirectory>
        
        <plugins>
            <!-- We need to fetch the MetalANGLE libs when the other libs get build/copied/fetched. Maybe there is a better way than using a ant script -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>fetch-metalangle</id>
                        <phase>validate</phase>
                        <configuration>
                            <target>
                                <mkdir dir="target/iosSim/"/>
                                <get src="https://github.com/kakashidinho/metalangle/releases/download/gles3-0.0.7/libMetalANGLE.a.ios.simulator.zip" dest="target/"/>
                                <unzip src="target/libMetalANGLE.a.ios.simulator.zip" dest="target/iosSim/"/>
                                <delete file="target/libMetalANGLE.a.ios.simulator.zip"/>
                                <exec executable="lipo">
                                    <arg value="-remove"/>
                                    <arg value="arm64"/>
                                    <arg value="target/iosSim/libMetalANGLE_static.a"/>
                                    <arg value="-output"/>
                                    <arg value="target/iosSim/libMetalANGLE_static_stripped.a"/>
                                </exec>
                                <delete file="target/iosSim/libMetalANGLE_static.a"/>
                                <mkdir dir="target/iosReal/"/>
                                <get src="https://github.com/kakashidinho/metalangle/releases/download/gles3-0.0.7/libMetalANGLE.a.ios.zip" dest="target/"/>
                                <unzip src="target/libMetalANGLE.a.ios.zip" dest="target/iosReal/"/>
                                <delete file="target/libMetalANGLE.a.ios.zip"/>
                                <mkdir dir="target/ios/"/>
                                <exec executable="lipo">
                                    <arg value="-create"/>
                                    <arg value="target/iosReal/libMetalANGLE_static.a"/>
                                    <arg value="target/iosSim/libMetalANGLE_static_stripped.a"/>
                                    <arg value="-output"/>
                                    <arg value="target/ios/libMetalANGLE_static.a"/>
                                </exec>
                                <delete file="target/iosReal/libMetalANGLE_static.a"/>
                                <delete file="target/iosSim/libMetalANGLE_static_stripped.a"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-local-desktop</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>                                
                                <resource><directory>${basedir}/../../libs/linux64</directory></resource>
                                <resource><directory>${basedir}/../../libs/linuxarm32</directory></resource>
                                <resource><directory>${basedir}/../../libs/linuxarm64</directory></resource>
                                <resource><directory>${basedir}/../../libs/macosx64</directory></resource>
                                <resource><directory>${basedir}/../../libs/macosxarm64</directory></resource>
                                <resource><directory>${basedir}/../../libs/windows32</directory></resource>
                                <resource><directory>${basedir}/../../libs/windows64</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/desktop</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                     <execution>
                        <id>copy-local-x86</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/x86</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/x86</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-x86_64</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/x86_64</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/x86_64</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-armeabi-v7a</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/armeabi-v7a</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/armeabi-v7a</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-arm64-v8a</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/arm64-v8a</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/arm64-v8a</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-local-ios</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource><directory>${basedir}/../../libs/ios32</directory></resource>
                            </resources>
                            <outputDirectory>${basedir}/target/ios</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- finally package everything up into jar files -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>desktop.xml</descriptor>
                        <descriptor>x86.xml</descriptor>
                        <descriptor>x86_64.xml</descriptor>                        
                        <descriptor>armeabi-v7a.xml</descriptor>
                        <descriptor>arm64-v8a.xml</descriptor>
                        <descriptor>ios.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
